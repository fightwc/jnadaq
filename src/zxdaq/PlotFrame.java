/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package zxdaq;

import java.awt.Color;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.ScheduledFuture;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import javax.swing.JFileChooser;
import javax.swing.JPanel;
import jna.NiDaqException;
import org.knowm.xchart.XChartPanel;
import org.knowm.xchart.XYChart;
import org.knowm.xchart.XYChartBuilder;
import org.knowm.xchart.XYSeries;
import org.knowm.xchart.style.markers.SeriesMarkers;

/**
 *
 * @author Tony Lab
 */
public class PlotFrame extends javax.swing.JFrame {

    private final XYChart[] charts;
    final private String[] dataTags;
//    final private ArrayList<LinkedList<Double>> dataPartial;
    final private ArrayList<LinkedList<Double>> dataFull;
    private final JPanel[] pnls;
    private ScheduledFuture sf;
    final private ZxDaq zdaq = new ZxDaq();
    private volatile int counter;
    private boolean completelyNew = true;
    private ScheduledExecutorService ses = new ScheduledThreadPoolExecutor(1);
    final private int windowLen = (int) ZxDaq.SAMPLE_RATE * 2;

    /**
     * Creates new form PlotFrame
     */
    public PlotFrame() {
        this.charts = new XYChart[4];
        for (int i = 0; i < 4; i++) {
            charts[i] = new XYChartBuilder().width(448).height(320).build();
            charts[i].getStyler().setPlotMargin(2)
                    .setChartBackgroundColor(Color.white).setLegendVisible(false);
        }
//        dataPartial = new ArrayList<>();
//        for (int i = 0; i < 16; i++) {
//            dataPartial.add(new LinkedList<>());
//        }
        dataFull = new ArrayList<>();
        for (int i = 0; i < 16; i++) {
            dataFull.add(new LinkedList<>());
        }
        dataTags = new String[4];
        for (int i = 0; i < 4; i++) {
            dataTags[i] = (new StringBuilder("data")).append(Integer.toString(i)).toString();
        }

        initComponents();
        pnls = new JPanel[]{pnlLT, pnlRT, pnlLB, pnlRB};
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        updownPanel = new javax.swing.JPanel();
        pnlBtns = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtLen = new javax.swing.JTextField();
        btnStart = new javax.swing.JButton();
        btnStop = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnClr = new javax.swing.JButton();
        pnlQuad = new javax.swing.JPanel();
        pnlLT = new javax.swing.JPanel();
        pnlPlotLT = new XChartPanel<XYChart>(charts[0]);
        pnl_LT_CHN = new javax.swing.JPanel();
        txtDev0 = new javax.swing.JTextField();
        txtDev1 = new javax.swing.JTextField();
        txtDev2 = new javax.swing.JTextField();
        txtDev3 = new javax.swing.JTextField();
        pnlRT = new javax.swing.JPanel();
        pnlPlotRT = new XChartPanel<XYChart>(charts[1]);
        pnl_RT_CHN = new javax.swing.JPanel();
        txtDev4 = new javax.swing.JTextField();
        txtDev5 = new javax.swing.JTextField();
        txtDev6 = new javax.swing.JTextField();
        txtDev7 = new javax.swing.JTextField();
        pnlLB = new javax.swing.JPanel();
        pnlPlotLB = new XChartPanel<XYChart>(charts[2]);
        pnl_LB_CHN = new javax.swing.JPanel();
        txtDev16 = new javax.swing.JTextField();
        txtDev17 = new javax.swing.JTextField();
        txtDev18 = new javax.swing.JTextField();
        txtDev19 = new javax.swing.JTextField();
        pnlRB = new javax.swing.JPanel();
        pnlPlotRB = new XChartPanel<XYChart>(charts[3]);
        pnl_RB_CHN = new javax.swing.JPanel();
        txtDev20 = new javax.swing.JTextField();
        txtDev21 = new javax.swing.JTextField();
        txtDev22 = new javax.swing.JTextField();
        txtDev23 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ZX DAQ 19.0312");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        updownPanel.setLayout(new java.awt.GridLayout(1, 1));

        pnlBtns.setPreferredSize(new java.awt.Dimension(800, 32));
        pnlBtns.setLayout(new java.awt.GridLayout(1, 0));

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Length(s) ");
        jPanel1.add(jLabel1, new java.awt.GridBagConstraints());

        txtLen.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtLen.setText("2400");
        txtLen.setPreferredSize(new java.awt.Dimension(40, 21));
        jPanel1.add(txtLen, new java.awt.GridBagConstraints());

        pnlBtns.add(jPanel1);

        btnStart.setText("Start");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });
        pnlBtns.add(btnStart);

        btnStop.setText("Stop");
        btnStop.setEnabled(false);
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });
        pnlBtns.add(btnStop);

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        pnlBtns.add(btnSave);

        btnClr.setText("Clear");
        btnClr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClrActionPerformed(evt);
            }
        });
        pnlBtns.add(btnClr);

        updownPanel.add(pnlBtns);

        getContentPane().add(updownPanel, java.awt.BorderLayout.SOUTH);

        pnlQuad.setLayout(new java.awt.GridLayout(2, 2));

        pnlLT.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout pnlPlotLTLayout = new javax.swing.GroupLayout(pnlPlotLT);
        pnlPlotLT.setLayout(pnlPlotLTLayout);
        pnlPlotLTLayout.setHorizontalGroup(
            pnlPlotLTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 360, Short.MAX_VALUE)
        );
        pnlPlotLTLayout.setVerticalGroup(
            pnlPlotLTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pnlLT.add(pnlPlotLT, java.awt.BorderLayout.CENTER);

        pnl_LT_CHN.setLayout(new java.awt.GridLayout(1, 0));

        txtDev0.setText("/Dev1/ai0");
        txtDev0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDev0ActionPerformed(evt);
            }
        });
        pnl_LT_CHN.add(txtDev0);

        txtDev1.setText("/Dev1/ai1");
        txtDev1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDev1ActionPerformed(evt);
            }
        });
        pnl_LT_CHN.add(txtDev1);

        txtDev2.setText("/Dev1/ai2");
        pnl_LT_CHN.add(txtDev2);

        txtDev3.setText("/Dev1/ai3");
        pnl_LT_CHN.add(txtDev3);

        pnlLT.add(pnl_LT_CHN, java.awt.BorderLayout.SOUTH);

        pnlQuad.add(pnlLT);

        pnlRT.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout pnlPlotRTLayout = new javax.swing.GroupLayout(pnlPlotRT);
        pnlPlotRT.setLayout(pnlPlotRTLayout);
        pnlPlotRTLayout.setHorizontalGroup(
            pnlPlotRTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 360, Short.MAX_VALUE)
        );
        pnlPlotRTLayout.setVerticalGroup(
            pnlPlotRTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 114, Short.MAX_VALUE)
        );

        pnlRT.add(pnlPlotRT, java.awt.BorderLayout.CENTER);

        pnl_RT_CHN.setLayout(new java.awt.GridLayout(1, 0));

        txtDev4.setText("/Dev1/ai4");
        txtDev4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDev4ActionPerformed(evt);
            }
        });
        pnl_RT_CHN.add(txtDev4);

        txtDev5.setText("/Dev1/ai5");
        txtDev5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDev5ActionPerformed(evt);
            }
        });
        pnl_RT_CHN.add(txtDev5);

        txtDev6.setText("/Dev1/ai6");
        pnl_RT_CHN.add(txtDev6);

        txtDev7.setText("/Dev1/ai7");
        pnl_RT_CHN.add(txtDev7);

        pnlRT.add(pnl_RT_CHN, java.awt.BorderLayout.SOUTH);

        pnlQuad.add(pnlRT);

        pnlLB.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout pnlPlotLBLayout = new javax.swing.GroupLayout(pnlPlotLB);
        pnlPlotLB.setLayout(pnlPlotLBLayout);
        pnlPlotLBLayout.setHorizontalGroup(
            pnlPlotLBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 360, Short.MAX_VALUE)
        );
        pnlPlotLBLayout.setVerticalGroup(
            pnlPlotLBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pnlLB.add(pnlPlotLB, java.awt.BorderLayout.CENTER);

        pnl_LB_CHN.setLayout(new java.awt.GridLayout(1, 0));

        txtDev16.setText("/Dev1/ai16");
        txtDev16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDev16ActionPerformed(evt);
            }
        });
        pnl_LB_CHN.add(txtDev16);

        txtDev17.setText("/Dev1/ai17");
        txtDev17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDev17ActionPerformed(evt);
            }
        });
        pnl_LB_CHN.add(txtDev17);

        txtDev18.setText("/Dev1/ai18");
        pnl_LB_CHN.add(txtDev18);

        txtDev19.setText("/Dev1/ai19");
        pnl_LB_CHN.add(txtDev19);

        pnlLB.add(pnl_LB_CHN, java.awt.BorderLayout.SOUTH);

        pnlQuad.add(pnlLB);

        pnlRB.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout pnlPlotRBLayout = new javax.swing.GroupLayout(pnlPlotRB);
        pnlPlotRB.setLayout(pnlPlotRBLayout);
        pnlPlotRBLayout.setHorizontalGroup(
            pnlPlotRBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 360, Short.MAX_VALUE)
        );
        pnlPlotRBLayout.setVerticalGroup(
            pnlPlotRBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pnlRB.add(pnlPlotRB, java.awt.BorderLayout.CENTER);

        pnl_RB_CHN.setLayout(new java.awt.GridLayout(1, 0));

        txtDev20.setText("/Dev1/ai20");
        txtDev20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDev20ActionPerformed(evt);
            }
        });
        pnl_RB_CHN.add(txtDev20);

        txtDev21.setText("/Dev1/ai21");
        txtDev21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDev21ActionPerformed(evt);
            }
        });
        pnl_RB_CHN.add(txtDev21);

        txtDev22.setText("/Dev1/ai22");
        pnl_RB_CHN.add(txtDev22);

        txtDev23.setText("/Dev1/ai23");
        pnl_RB_CHN.add(txtDev23);

        pnlRB.add(pnl_RB_CHN, java.awt.BorderLayout.SOUTH);

        pnlQuad.add(pnlRB);

        getContentPane().add(pnlQuad, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnClrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClrActionPerformed
//        for (LinkedList<Double> l : dataPartial) {
//            l.clear();
//        }
        for (LinkedList<Double> l : dataFull) {
            l.clear();
        }

        for (XYChart c : charts) {
            for (String s : dataTags) {
                if (c.getSeriesMap().containsKey(s)) {
                    c.removeSeries(s);
                }
            }
        }
        for (JPanel p : pnls) {
            p.revalidate();
            p.repaint();
        }
    }//GEN-LAST:event_btnClrActionPerformed

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        try {
            int t = Integer.parseInt(txtLen.getText());
            if (t > 0 && t < 86400) {
                txtLen.setEditable(false);
                btnStart.setEnabled(false);
                btnClr.setEnabled(false);
                btnStop.setEnabled(true);
                counter = 0;
//                for (LinkedList<Double> l : dataPartial) {
//                    l.clear();
//                }
                for (LinkedList<Double> l : dataFull) {
                    l.clear();
                }

                zdaq.initTask(completelyNew, emurateDevs());
                completelyNew = false;
                sf = ses.scheduleWithFixedDelay(new Update(), 100, 150, TimeUnit.MILLISECONDS);
            }
        } catch (NiDaqException | NumberFormatException e) {
            System.out.println(e.toString());
        }


    }//GEN-LAST:event_btnStartActionPerformed

    private String[] emurateDevs() {
        return new String[]{
            txtDev0.getText(),
            txtDev1.getText(),
            txtDev2.getText(),
            txtDev3.getText(),
            txtDev4.getText(),
            txtDev5.getText(),
            txtDev6.getText(),
            txtDev7.getText(),
            txtDev16.getText(),
            txtDev17.getText(),
            txtDev18.getText(),
            txtDev19.getText(),
            txtDev20.getText(),
            txtDev21.getText(),
            txtDev22.getText(),
            txtDev23.getText()
        };
    }

    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        try {
            if (null != sf) {
                sf.cancel(true);
            }
            zdaq.stopTask();
            txtLen.setEditable(true);
            btnClr.setEnabled(true);
            btnStop.setEnabled(false);
            btnStart.setEnabled(true);

        } catch (NiDaqException e) {
            System.out.println(e.toString());
        }
    }//GEN-LAST:event_btnStopActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        for (LinkedList<Double> l : dataFull) {
            if (null == l || l.isEmpty()) {
                return;
            }
        }

        LinkedList<LinkedList<Double>> save = new LinkedList<>();
        for (LinkedList<Double> l : dataFull) {
            save.add(l);
        }

        JFileChooser fc = new JFileChooser();
        fc.setDialogTitle("File to save");
        if (fc.showSaveDialog(jPanel1) == JFileChooser.APPROVE_OPTION) {
            File f = fc.getSelectedFile();
            try (ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream(f))) {
                out.writeObject(save);
                out.flush();
            } catch (IOException e) {
                System.out.println(e.toString());
                this.setTitle(e.toString());
            }
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtDev0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDev0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDev0ActionPerformed

    private void txtDev1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDev1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDev1ActionPerformed

    private void txtDev16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDev16ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDev16ActionPerformed

    private void txtDev17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDev17ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDev17ActionPerformed

    private void txtDev20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDev20ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDev20ActionPerformed

    private void txtDev21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDev21ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDev21ActionPerformed

    private void txtDev5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDev5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDev5ActionPerformed

    private void txtDev4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDev4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDev4ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (null != sf && !sf.isCancelled()) {
            sf.cancel(true);
        }
        if (null != ses && ses.isShutdown()) {
            ses.shutdown();
        }
    }//GEN-LAST:event_formWindowClosing

    private class Update implements Runnable {

        @Override
        public void run() {
            try {
                if (counter > (double) Integer.parseInt(txtLen.getText()) / ZxDaq.SAMP_INTERVAL) {
                    if (null != sf) {
                        sf.cancel(true);
                    }
                    zdaq.stopTask();
                } else {
                    counter++;
                    double[] data = zdaq.readAnalogueIn((int) (ZxDaq.SAMPLE_RATE * ZxDaq.SAMP_INTERVAL));
                    //DEBUG
                    if (data == null || data.length == 0) {
                        System.out.println("Null or empty data while reading Analog In");
                        return;
                    }
                    int perChannel = data.length / ZxDaq.CHANNEL_COUNT;
//                    System.out.println(perChannel);
                    for (int i = 0; i < ZxDaq.CHANNEL_COUNT; i++) {
                        for (int j = i * perChannel; j < (i + 1) * perChannel; j++) {
                            dataFull.get(i).add(data[j]);
                        }
                    }
                    for (int i = 0; i < 16; i++) {
                        int pnlIdx = i >> 2;
                        int seriesIdx = i & 3;
                        XYChart c = charts[pnlIdx];
                        String tag = dataTags[seriesIdx];
                        LinkedList<Double> l = dataFull.get(i);
                        if (!c.getSeriesMap().containsKey(tag)) {
                            (c.addSeries(tag, null, l.subList(l.size() > (windowLen - 1) ? l.size() - windowLen : 0, l.size()), null)).setMarker(SeriesMarkers.NONE);
                        }
                        c.updateXYSeries(tag, null, l.subList(l.size() > (windowLen - 1) ? l.size() - windowLen : 0, l.size()), null);
                        pnls[pnlIdx].revalidate();
                        pnls[pnlIdx].repaint();
                    }
                }
            } catch (NiDaqException e) {
                System.out.println(e.toString());
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlotFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlotFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlotFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlotFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PlotFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClr;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnStop;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel pnlBtns;
    private javax.swing.JPanel pnlLB;
    private javax.swing.JPanel pnlLT;
    private javax.swing.JPanel pnlPlotLB;
    private javax.swing.JPanel pnlPlotLT;
    private javax.swing.JPanel pnlPlotRB;
    private javax.swing.JPanel pnlPlotRT;
    private javax.swing.JPanel pnlQuad;
    private javax.swing.JPanel pnlRB;
    private javax.swing.JPanel pnlRT;
    private javax.swing.JPanel pnl_LB_CHN;
    private javax.swing.JPanel pnl_LT_CHN;
    private javax.swing.JPanel pnl_RB_CHN;
    private javax.swing.JPanel pnl_RT_CHN;
    private javax.swing.JTextField txtDev0;
    private javax.swing.JTextField txtDev1;
    private javax.swing.JTextField txtDev16;
    private javax.swing.JTextField txtDev17;
    private javax.swing.JTextField txtDev18;
    private javax.swing.JTextField txtDev19;
    private javax.swing.JTextField txtDev2;
    private javax.swing.JTextField txtDev20;
    private javax.swing.JTextField txtDev21;
    private javax.swing.JTextField txtDev22;
    private javax.swing.JTextField txtDev23;
    private javax.swing.JTextField txtDev3;
    private javax.swing.JTextField txtDev4;
    private javax.swing.JTextField txtDev5;
    private javax.swing.JTextField txtDev6;
    private javax.swing.JTextField txtDev7;
    private javax.swing.JTextField txtLen;
    private javax.swing.JPanel updownPanel;
    // End of variables declaration//GEN-END:variables

    public static void debugOutput(Object o) {
        if (true) {
            System.out.println(o.toString());
        }
    }

}
